{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "contentVersion": "1.0.0.0",
        "actions": {
            "Initialize_variables": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "validationErrors",
                            "type": "array",
                            "value": []
                        },
                        {
                            "name": "requiredFields",
                            "type": "array",
                            "value": [
                                "firstName",
                                "lastName",
                                "email",
                                "phoneNumber",
                                "address",
                                "city",
                                "state",
                                "postalCode",
                                "country",
                                "gender"
                            ]
                        }
                    ]
                },
                "runAfter": {}
            },
            "For_each": {
                "type": "Foreach",
                "foreach": "@variables('requiredFields')",
                "actions": {
                    "Condition": {
                        "type": "If",
                        "expression": {
                            "or": [
                                {
                                    "equals": [
                                        "@empty(triggerBody()?[item()])\r\n",
                                        true
                                    ]
                                },
                                {
                                    "equals": [
                                        "@equals(triggerBody()?[item()], '')",
                                        true
                                    ]
                                }
                            ]
                        },
                        "actions": {
                            "Append_to_array_variable": {
                                "type": "AppendToArrayVariable",
                                "inputs": {
                                    "name": "validationErrors",
                                    "value": {
                                        "field": "@{item()}",
                                        "message": "Field is required and must contain at least 1 character."
                                    }
                                }
                            }
                        },
                        "else": {
                            "actions": {}
                        }
                    }
                },
                "runAfter": {
                    "Initialize_variables": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Condition_1": {
                "type": "If",
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@empty(variables('validationErrors'))",
                                true
                            ]
                        }
                    ]
                },
                "actions": {
                    "Response": {
                        "type": "Response",
                        "kind": "Http",
                        "inputs": {
                            "statusCode": 200,
                            "body": {
                                "message": "Validation Passed"
                            }
                        }
                    }
                },
                "else": {
                    "actions": {
                        "Response_1": {
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 400,
                                "body": {
                                    "message": "Validation Failed",
                                    "errors": "@{variables('validationErrors')}"
                                }
                            }
                        }
                    }
                },
                "runAfter": {
                    "For_each": [
                        "SUCCEEDED"
                    ]
                }
            }
        },
        "outputs": {},
        "triggers": {
            "When_a_HTTP_request_is_received": {
                "type": "Request",
                "kind": "Http",
                "inputs": {
                    "method": "POST",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "properties": {
                                "type": "object",
                                "properties": {
                                    "firstName": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "lastName": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "email": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "phoneNumber": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "address": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "city": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "state": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "postalCode": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "country": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "gender": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "required": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "kind": "Stateful"
}